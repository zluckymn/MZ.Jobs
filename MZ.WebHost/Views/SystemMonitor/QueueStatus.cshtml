@{
    ViewBag.Title = "QueueStatus";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
<style>
    /*
    //td 文字超长省略
    .table td {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .table {
        table-layout: fixed;
    }*/

    .input2 {
        height: 13px;
        vertical-align: text-top;
        margin-top: 0;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <a class="p-btn" href="http://192.168.185.173:15672" target="_blank" title="RabbitMQ服务状态">RabbitMQ Server Status</a>
                <div style="margin-top:0px;">
                    <div id="toolbar" class="btn-group">
                        <label class="btn btn-default" for="auto">
                            <input type="checkbox" id="auto" class="input2"><span>自动刷新</span>
                        </label>
                    </div>
                    <table id="table" class="table"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    SetMenu(3, 1);
    
    
    
    var opt = {
        url: '/SystemMonitor/ConsumerInfo', //请求后台的URL（*）
        method: 'get', //请求方式（*）
        toolbar: '#toolbar',                //工具按钮用哪个容器
        striped: true, //是否显示行间隔色
        cache: false, //是否使用缓存，默认为true（*）
        pagination: true, //是否显示分页（*）
        sortable: true, //是否启用排序
        sortOrder: "asc", //排序方式
        queryParams: function (params) {
            var temp = { //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit, //页面大小
                offset: params.offset, //页码
                search: params.search
            };
            return temp;
        }, //传递参数（*）
        sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
        pageNumber: 1, //初始化加载第一页，默认第一页
        pageSize: 25, //每页的记录行数（*）
        pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
        search: true, //是否显示表格搜索，
        strictSearch: true,
        trimOnSearch: false,
        showColumns: true, //是否显示所有的列
        showRefresh: true, //是否显示刷新按钮
        minimumCountColumns: 2, //最少允许的列数
        clickToSelect: true, //是否启用点击选中行
        //height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        uniqueId: "consumerId", //每一行的唯一标识，一般为主键列
        showToggle: true, //是否显示详细视图和列表视图的切换按钮
        cardView: false, //是否显示详细视图
        detailView: false, //是否显示父子表
        columns: [
            {
                field: 'consumerId',
                title: '编号',
                align: 'center'
            }, {
                field: 'ip',
                align: 'center',
                title: '消费者IP'
            }, {
                field: 'queueType',
                title: '队列类型',
                align: 'center',
                formatter: function (value, row, index) {
                    switch (value) {
                        case "0":
                            value = "SystemDataAnalyse";
                            break;
                        case "1":
                            value = "SystemHealth";
                            break;
                        case "2":
                            value = "LogAnalyse";
                            break;
                        case "3":
                            value = "JobUpdate";
                            break;
                        case "4":
                            value = "CommonDBChangeQueue";
                            break;
                    }
                    return value;
                }
            }, {
                field: 'isStart',
                title: '状态',
                align: 'center',
                formatter: function (value, row, index) {
                    return value === 0
                        ? '<span class="fa fa-circle ml10" style="font-size:14px;">Stopped</span>'
                        : '<span class="fa fa-circle ml10 p-f_green1" style="font-size:14px;">Running</span>';
                }
            }, {
                field: 'lastStartTime',
                align: 'center',
                title: '上次开始时间'
            }, {
                field: 'lastEndTime',
                align: 'center',
                title: '上次结束时间'
            }
            //, {
            //    field: 'lastExecTime',
            //    align: 'center',
            //    title: '上次成功时间'
            //}
        ]
    };
    var autoRefresh = false;
    setTimeout(refresh, 5000);
    function refresh() {
        if (autoRefresh) {
            $('#table').bootstrapTable('refresh', { silent: true });
        }
        setTimeout(refresh, 5000);
    }
    $("#auto").change(function () {
        autoRefresh = $(this).is(':checked');
    });
    $('#table').bootstrapTable(opt);
    var $table = $('#table');
    $table.on('post-body.bs.table', function () {
        var $search = $table.data('bootstrap.table')
            .$toolbar.find('.search input');
        $search.attr('placeholder', '搜索IP');
    });
</script>