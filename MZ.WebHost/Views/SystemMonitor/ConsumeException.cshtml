@{
    ViewBag.Title = "ConsumeException";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
<style>
    .table td {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .table {
        table-layout: fixed;
    }

    .detail-view td {
        width: 100%;
        word-break: break-all;
        word-wrap: break-word;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <a class="p-btn" href="http://192.168.185.173:15672" target="_blank" title="RabbitMQ服务状态">RabbitMQ Server Status</a>
                <div style="margin-top:-38px;">
                    <table id="table" class="table"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    SetMenu(3, 2);
    function collapseRow(index) {
        $("#table").bootstrapTable('collapseRow', index);
    }
    $('#table').bootstrapTable({
        url: '/SystemMonitor/ConsumerLogInfo', //请求后台的URL（*）
        method: 'get', //请求方式（*）
        //toolbar: '#toolbar',                //工具按钮用哪个容器
        striped: true, //是否显示行间隔色
        cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
        pagination: true, //是否显示分页（*）
        sortable: false, //是否启用排序
        sortOrder: "asc", //排序方式
        queryParams: function(params) {
            var temp = { //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit, //页面大小
                offset: params.offset, //页码
                search: params.search
            };
            return temp;
        }, //传递参数（*）
        sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
        pageNumber: 1, //初始化加载第一页，默认第一页
        pageSize: 10, //每页的记录行数（*）
        pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
        search: false, //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
        strictSearch: true,
        showColumns: true, //是否显示所有的列
        showRefresh: true, //是否显示刷新按钮
        minimumCountColumns: 2, //最少允许的列数
        clickToSelect: true, //是否启用点击选中行
        //height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        uniqueId: "logId", //每一行的唯一标识，一般为主键列
        showToggle: true, //是否显示详细视图和列表视图的切换按钮
        cardView: false, //是否显示详细视图
        detailView: true, //是否显示父子表
        detailFormatter: function (index, row) {

            var html = [];
            html.push('<p><b>异常信息:</b> ' + row.msg + '</p>');
            html.push('<p><b>原始数据:</b> ' + row.sourceData + '</p>');
            layer.open({
                title: "编号为"+row.logId+'的详细数据'
                , content: html.join(''), cancel: function () {
                    //右上角关闭回调
                    collapseRow(index);
                },yes: function(){
                    collapseRow(index);
                    layer.closeAll();
                }
            });
            return false;
        },
        columns: [
            {
                field: 'logId',
                title: '编号',
                align: 'center',
                width: '5%'
            }, {
                field: 'ip',
                title: '消费者IP',
                align: 'center',
                width: '10%'
            }, {
                field: 'queueType',
                align: 'center',
                title: '队列类型',
                width: '12%',
                formatter: function (value, row, index) {
                    switch (value) {
                    case "0":
                        value = "SystemDataAnalyse";
                        break;
                    case "1":
                        value = "SystemHealth";
                        break;
                    case "2":
                        value = "LogAnalyse";
                        break;
                    case "3":
                        value = "JobUpdate";
                        break;
                    case "4":
                        value = "CommonDBChangeQueue";
                        break;
                    }
                    return value;
                }
            }, {
                field: 'type', align: 'center',
                title: '失败类型',
                width: '7.5%',
                formatter: function (value, row, index) {
                    switch(value) {
                    case 0:
                        value = "Exception";
                        break;
                    case 1:
                        value = "DB fail";
                        break;
                    }
                    return value;
                }
            }, {
                field: 'customer',
                title: '客户',
                align: 'center',
                width: '5%'
            }, {
                field: 'msg',
                title: '失败信息',
                halign: 'center',
                width: '25%'
            }, {
                field: 'sourceData',
                halign: 'center',
                title: '原始数据',
                width: '25%'
            }, {
                field: 'time',
                title: '时间',
                align: 'center',
                width: '15%'
            }]
    });
</script>

