//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 
namespace MZ.BusinessLogicLayer.WebService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RemoteIISSitesSoap", Namespace="http://tempuri.org/")]
    public partial class RemoteIISSites : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperateWebSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperateAppPoolsOperationCompleted;

        /// <remarks/>
        public RemoteIISSites(string serverAddr)
        {
            this.Url = "http://" + serverAddr + ":12315/RemoteIISSites.asmx";
        }

        /// <remarks/>
        public event CreateSitesCompletedEventHandler CreateSitesCompleted;
        
        /// <remarks/>
        public event GetSitesCompletedEventHandler GetSitesCompleted;
        
        /// <remarks/>
        public event OperateWebSiteCompletedEventHandler OperateWebSiteCompleted;
        
        /// <remarks/>
        public event OperateAppPoolsCompletedEventHandler OperateAppPoolsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateSites(string hostIP, string portNum, string descOfWebSite, string commentOfWebSite, string webPath) {
            object[] results = this.Invoke("CreateSites", new object[] {
                        hostIP,
                        portNum,
                        descOfWebSite,
                        commentOfWebSite,
                        webPath});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSites(string hostIP, string portNum, string descOfWebSite, string commentOfWebSite, string webPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSites", new object[] {
                        hostIP,
                        portNum,
                        descOfWebSite,
                        commentOfWebSite,
                        webPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateSites(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSitesAsync(string hostIP, string portNum, string descOfWebSite, string commentOfWebSite, string webPath) {
            this.CreateSitesAsync(hostIP, portNum, descOfWebSite, commentOfWebSite, webPath, null);
        }
        
        /// <remarks/>
        public void CreateSitesAsync(string hostIP, string portNum, string descOfWebSite, string commentOfWebSite, string webPath, object userState) {
            if ((this.CreateSitesOperationCompleted == null)) {
                this.CreateSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSitesOperationCompleted);
            }
            this.InvokeAsync("CreateSites", new object[] {
                        hostIP,
                        portNum,
                        descOfWebSite,
                        commentOfWebSite,
                        webPath}, this.CreateSitesOperationCompleted, userState);
        }
        
        private void OnCreateSitesOperationCompleted(object arg) {
            if ((this.CreateSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSitesCompleted(this, new CreateSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSites() {
            object[] results = this.Invoke("GetSites", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSites(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSites", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetSites(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSitesAsync() {
            this.GetSitesAsync(null);
        }
        
        /// <remarks/>
        public void GetSitesAsync(object userState) {
            if ((this.GetSitesOperationCompleted == null)) {
                this.GetSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSitesOperationCompleted);
            }
            this.InvokeAsync("GetSites", new object[0], this.GetSitesOperationCompleted, userState);
        }
        
        private void OnGetSitesOperationCompleted(object arg) {
            if ((this.GetSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSitesCompleted(this, new GetSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OperateWebSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OperateWebSite(string siteName, string opType) {
            object[] results = this.Invoke("OperateWebSite", new object[] {
                        siteName,
                        opType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOperateWebSite(string siteName, string opType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OperateWebSite", new object[] {
                        siteName,
                        opType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndOperateWebSite(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OperateWebSiteAsync(string siteName, string opType) {
            this.OperateWebSiteAsync(siteName, opType, null);
        }
        
        /// <remarks/>
        public void OperateWebSiteAsync(string siteName, string opType, object userState) {
            if ((this.OperateWebSiteOperationCompleted == null)) {
                this.OperateWebSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperateWebSiteOperationCompleted);
            }
            this.InvokeAsync("OperateWebSite", new object[] {
                        siteName,
                        opType}, this.OperateWebSiteOperationCompleted, userState);
        }
        
        private void OnOperateWebSiteOperationCompleted(object arg) {
            if ((this.OperateWebSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperateWebSiteCompleted(this, new OperateWebSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OperateAppPools", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OperateAppPools(string appPoolName, string opType) {
            object[] results = this.Invoke("OperateAppPools", new object[] {
                        appPoolName,
                        opType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOperateAppPools(string appPoolName, string opType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OperateAppPools", new object[] {
                        appPoolName,
                        opType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndOperateAppPools(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OperateAppPoolsAsync(string appPoolName, string opType) {
            this.OperateAppPoolsAsync(appPoolName, opType, null);
        }
        
        /// <remarks/>
        public void OperateAppPoolsAsync(string appPoolName, string opType, object userState) {
            if ((this.OperateAppPoolsOperationCompleted == null)) {
                this.OperateAppPoolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperateAppPoolsOperationCompleted);
            }
            this.InvokeAsync("OperateAppPools", new object[] {
                        appPoolName,
                        opType}, this.OperateAppPoolsOperationCompleted, userState);
        }
        
        private void OnOperateAppPoolsOperationCompleted(object arg) {
            if ((this.OperateAppPoolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperateAppPoolsCompleted(this, new OperateAppPoolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CreateSitesCompletedEventHandler(object sender, CreateSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetSitesCompletedEventHandler(object sender, GetSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void OperateWebSiteCompletedEventHandler(object sender, OperateWebSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperateWebSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OperateWebSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void OperateAppPoolsCompletedEventHandler(object sender, OperateAppPoolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperateAppPoolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OperateAppPoolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}
